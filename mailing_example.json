{"date_range":"July 05 to 12, 2016.",
 "articles":[ {"author":"Marc Lasson",
	      "title":"landmarks 1.0 : A simple profiling library",
	      "content":"We are pleased to announce that the first version of \"landmarks\" is out. It is available on opam (opam install landmarks) and github (<https://github.com/LexiFi/landmarks>). Landmarks is a simple profiling library for OCaml. It provides primitives to delimit portions of code and measure the performance of instrumented code at runtime. The available measures are obtained by aggregating CPU cycles (using the cpu's time stamp counter), applicative time (using Sys.time) and allocated bytes (with Gc.allocated_bytes). The instrumentation of the code may either done by hand, automatically or semi-automatically using a PPX extension.During the execution of your program, the traversal of instrumented code by the control flow is recorded as a \"callgraph\" that carries the collected measures. The results may be browsed either directly on the console, or by exporting results to a simple web-application. You may try out the web viewer (<http://lexifi.github.io/landmarks/viewer.html>) which contains two examples of profiling (one is profiling the ocaml compiler when it is compiling the module \"typecore.ml\" and the other is profiling coq when it is compiling one file of the standard library)."},
	     {"author": "Malcolm Matalka",
	      "title": "why is building ocaml hard?",
	      "content":" I've created a build tool called pds (in opam, although a newer version needs to be released) which is meant to be really easy to go from nothing to a compiling project that installs.  One problem I found with the various Ocaml build systems was that they were very flexible, which can be nice, but also made them more complicated.  I was willing to sacrifice flexibility for simplicity. The README for the current version can be found here: <https://bitbucket.org/mimirops/pds/raw/95da73d295d790c82ed900a76880a402b9120b49/README.org> I'm sure there are bugs in there, especially the Makefile it generates, but I use it on all of my projects with success.  It does rely heavily on ocamldep to come up with the correct order to compile things within a project."}]}
